@using Materials.Core.DTOs
@model CreateMaterialDTO

@{
    ViewData["Title"] = "AddOrEdit";
}

<div class="row">
    <div class="col-md-6 offset-md-3">
        <h1>Comment</h1>
            <hr />
        <form asp-action="AddMaterialToDatabase" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags" class="control-label"></label>
                <input asp-for="Tags" class="form-control" />
                <input asp-for="Tags" class="form-control" />
                <input asp-for="Tags" class="form-control" />
                <input asp-for="Tags" class="form-control" />
            </div>

            <div class="row mt-2">
                <div class="col-md-6">
                    <div class="form-group">
                        <input type="submit" value="Submit" class="btn btn-primary w-100" />
                    </div>
                </div>
                <div class="col-md-6">
                    <a asp-action="Index" class="btn btn-secondary w-100">View all</a>
                </div>
            </div>
        </form>
    </div>
</div>

<div>
    
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}